// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: media/web/v1/web_services.proto

package webv1

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/wenerme/torrenti/pkg/apis/media/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/httpbody"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTorrentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *GetTorrentRequest) Reset() {
	*x = GetTorrentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_v1_web_services_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTorrentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTorrentRequest) ProtoMessage() {}

func (x *GetTorrentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_v1_web_services_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTorrentRequest.ProtoReflect.Descriptor instead.
func (*GetTorrentRequest) Descriptor() ([]byte, []int) {
	return file_media_web_v1_web_services_proto_rawDescGZIP(), []int{0}
}

func (x *GetTorrentRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetTorrentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *Torrent `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetTorrentResponse) Reset() {
	*x = GetTorrentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_v1_web_services_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTorrentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTorrentResponse) ProtoMessage() {}

func (x *GetTorrentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_v1_web_services_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTorrentResponse.ProtoReflect.Descriptor instead.
func (*GetTorrentResponse) Descriptor() ([]byte, []int) {
	return file_media_web_v1_web_services_proto_rawDescGZIP(), []int{1}
}

func (x *GetTorrentResponse) GetItem() *Torrent {
	if x != nil {
		return x.Item
	}
	return nil
}

type TorrentRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName    string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileHash    string                 `protobuf:"bytes,2,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	Referer     string                 `protobuf:"bytes,3,opt,name=referer,proto3" json:"referer,omitempty"`
	Comment     string                 `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	CreatedBy   string                 `protobuf:"bytes,5,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	TorrentHash string                 `protobuf:"bytes,7,opt,name=torrent_hash,json=torrentHash,proto3" json:"torrent_hash,omitempty"`
	Torrent     *Torrent               `protobuf:"bytes,8,opt,name=torrent,proto3,oneof" json:"torrent,omitempty"`
}

func (x *TorrentRef) Reset() {
	*x = TorrentRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_v1_web_services_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TorrentRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TorrentRef) ProtoMessage() {}

func (x *TorrentRef) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_v1_web_services_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TorrentRef.ProtoReflect.Descriptor instead.
func (*TorrentRef) Descriptor() ([]byte, []int) {
	return file_media_web_v1_web_services_proto_rawDescGZIP(), []int{2}
}

func (x *TorrentRef) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *TorrentRef) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

func (x *TorrentRef) GetReferer() string {
	if x != nil {
		return x.Referer
	}
	return ""
}

func (x *TorrentRef) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TorrentRef) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *TorrentRef) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TorrentRef) GetTorrentHash() string {
	if x != nil {
		return x.TorrentHash
	}
	return ""
}

func (x *TorrentRef) GetTorrent() *Torrent {
	if x != nil {
		return x.Torrent
	}
	return nil
}

type Torrent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName  string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Hash      string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Magnet    string `protobuf:"bytes,3,opt,name=magnet,proto3" json:"magnet,omitempty"`
	FileSize  int64  `protobuf:"varint,4,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	FileCount int32  `protobuf:"varint,5,opt,name=file_count,json=fileCount,proto3" json:"file_count,omitempty"`
	Ext       string `protobuf:"bytes,6,opt,name=ext,proto3" json:"ext,omitempty"`
	IsDir     bool   `protobuf:"varint,7,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
}

func (x *Torrent) Reset() {
	*x = Torrent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_v1_web_services_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Torrent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Torrent) ProtoMessage() {}

func (x *Torrent) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_v1_web_services_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Torrent.ProtoReflect.Descriptor instead.
func (*Torrent) Descriptor() ([]byte, []int) {
	return file_media_web_v1_web_services_proto_rawDescGZIP(), []int{3}
}

func (x *Torrent) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Torrent) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Torrent) GetMagnet() string {
	if x != nil {
		return x.Magnet
	}
	return ""
}

func (x *Torrent) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Torrent) GetFileCount() int32 {
	if x != nil {
		return x.FileCount
	}
	return 0
}

func (x *Torrent) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *Torrent) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

type ListTorrentRefRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTorrentRefRequest) Reset() {
	*x = ListTorrentRefRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_v1_web_services_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTorrentRefRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTorrentRefRequest) ProtoMessage() {}

func (x *ListTorrentRefRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_v1_web_services_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTorrentRefRequest.ProtoReflect.Descriptor instead.
func (*ListTorrentRefRequest) Descriptor() ([]byte, []int) {
	return file_media_web_v1_web_services_proto_rawDescGZIP(), []int{4}
}

type ListTorrentRefResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*TorrentRef `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListTorrentRefResponse) Reset() {
	*x = ListTorrentRefResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_media_web_v1_web_services_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTorrentRefResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTorrentRefResponse) ProtoMessage() {}

func (x *ListTorrentRefResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_web_v1_web_services_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTorrentRefResponse.ProtoReflect.Descriptor instead.
func (*ListTorrentRefResponse) Descriptor() ([]byte, []int) {
	return file_media_web_v1_web_services_proto_rawDescGZIP(), []int{5}
}

func (x *ListTorrentRefResponse) GetItems() []*TorrentRef {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_media_web_v1_web_services_proto protoreflect.FileDescriptor

var file_media_web_v1_web_services_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x77,
	0x65, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x62, 0x6f,
	0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x27, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x3f, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xb9, 0x02, 0x0a,
	0x0a, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x34, 0x0a, 0x07, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x07, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x07, 0x54, 0x6f, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x67, 0x6e, 0x65, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x69,
	0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44,
	0x69, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x32, 0xe7, 0x01, 0x0a, 0x0a, 0x57, 0x65, 0x62, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77,
	0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x74, 0x6f, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x69, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f,
	0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x68, 0x61, 0x73, 0x68, 0x7d, 0x42,
	0xaf, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x77, 0x65,
	0x62, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x57, 0x65, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x6e, 0x65, 0x72, 0x6d, 0x65, 0x2f, 0x74, 0x6f, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x77, 0x65, 0x62, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x4d, 0x57, 0x58, 0xaa, 0x02, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x2e,
	0x57, 0x65, 0x62, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x5c, 0x57,
	0x65, 0x62, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x18, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x5c, 0x57, 0x65,
	0x62, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x3a, 0x3a, 0x57, 0x65, 0x62, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_media_web_v1_web_services_proto_rawDescOnce sync.Once
	file_media_web_v1_web_services_proto_rawDescData = file_media_web_v1_web_services_proto_rawDesc
)

func file_media_web_v1_web_services_proto_rawDescGZIP() []byte {
	file_media_web_v1_web_services_proto_rawDescOnce.Do(func() {
		file_media_web_v1_web_services_proto_rawDescData = protoimpl.X.CompressGZIP(file_media_web_v1_web_services_proto_rawDescData)
	})
	return file_media_web_v1_web_services_proto_rawDescData
}

var (
	file_media_web_v1_web_services_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
	file_media_web_v1_web_services_proto_goTypes  = []interface{}{
		(*GetTorrentRequest)(nil),      // 0: media.web.v1.GetTorrentRequest
		(*GetTorrentResponse)(nil),     // 1: media.web.v1.GetTorrentResponse
		(*TorrentRef)(nil),             // 2: media.web.v1.TorrentRef
		(*Torrent)(nil),                // 3: media.web.v1.Torrent
		(*ListTorrentRefRequest)(nil),  // 4: media.web.v1.ListTorrentRefRequest
		(*ListTorrentRefResponse)(nil), // 5: media.web.v1.ListTorrentRefResponse
		(*timestamppb.Timestamp)(nil),  // 6: google.protobuf.Timestamp
	}
)
var file_media_web_v1_web_services_proto_depIdxs = []int32{
	3, // 0: media.web.v1.GetTorrentResponse.item:type_name -> media.web.v1.Torrent
	6, // 1: media.web.v1.TorrentRef.created_at:type_name -> google.protobuf.Timestamp
	3, // 2: media.web.v1.TorrentRef.torrent:type_name -> media.web.v1.Torrent
	2, // 3: media.web.v1.ListTorrentRefResponse.items:type_name -> media.web.v1.TorrentRef
	4, // 4: media.web.v1.WebService.ListTorrentRef:input_type -> media.web.v1.ListTorrentRefRequest
	0, // 5: media.web.v1.WebService.GetTorrent:input_type -> media.web.v1.GetTorrentRequest
	5, // 6: media.web.v1.WebService.ListTorrentRef:output_type -> media.web.v1.ListTorrentRefResponse
	1, // 7: media.web.v1.WebService.GetTorrent:output_type -> media.web.v1.GetTorrentResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_media_web_v1_web_services_proto_init() }
func file_media_web_v1_web_services_proto_init() {
	if File_media_web_v1_web_services_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_media_web_v1_web_services_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTorrentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_web_v1_web_services_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTorrentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_web_v1_web_services_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TorrentRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_web_v1_web_services_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Torrent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_web_v1_web_services_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTorrentRefRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_media_web_v1_web_services_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTorrentRefResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_media_web_v1_web_services_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_media_web_v1_web_services_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_media_web_v1_web_services_proto_goTypes,
		DependencyIndexes: file_media_web_v1_web_services_proto_depIdxs,
		MessageInfos:      file_media_web_v1_web_services_proto_msgTypes,
	}.Build()
	File_media_web_v1_web_services_proto = out.File
	file_media_web_v1_web_services_proto_rawDesc = nil
	file_media_web_v1_web_services_proto_goTypes = nil
	file_media_web_v1_web_services_proto_depIdxs = nil
}
