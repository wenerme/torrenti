syntax = "proto3";

package media.web.v1;

import "google/api/annotations.proto";
import "google/api/httpbody.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/duration.proto";
import "media/common/file.proto";


service WebService {
  rpc ListTorrentRef(ListTorrentRefRequest) returns (ListTorrentRefResponse) {
    option (google.api.http) = {
      get: "/torrents"
    };
  }
  rpc GetTorrentRef(GetTorrentRefRequest) returns (GetTorrentRefResponse) {
    option (google.api.http) = {
      get: "/torrents/{hash}"
    };
  }
  rpc GetTorrentRefData(GetTorrentRefDataRequest) returns (GetTorrentRefDataResponse) {
    option (google.api.http) = {
      get: "/torrents/{hash}/data"
    };
  }
  rpc GetTorrentRefMeta(GetTorrentRefMetaRequest) returns (GetTorrentRefMetaResponse) {
    option (google.api.http) = {
      get: "/torrents/{hash}/meta"
    };
  }
  rpc SearchTorrentRef(SearchTorrentRefRequest) returns (SearchTorrentRefResponse) {
    option (google.api.http) = {
      get: "/torrents/search"
    };
  }
}

message GetTorrentRefDataRequest{
  string hash = 1;
}
message GetTorrentRefDataResponse{
  bytes data = 1;
  TorrentRef item = 2;
}

message GetTorrentRefMetaRequest{
  string hash = 1;
}
message GetTorrentRefMetaResponse{
  google.protobuf.Struct meta = 1;
}

message SearchTorrentRefRequest {
  string search = 1;
  int32 limit = 2;
  int32 offset = 3;
}
message SearchTorrentRefResponse {
  repeated SearchTorrentRef items = 1;
  int32 total = 2;
  int32 duration = 3;
}

message SearchTorrentRef {
  TorrentRef item = 1;
  string highlight_file_name = 2;
  string highlight_torrent_name = 3;
}

message GetTorrentRefRequest {
  string hash = 1;
}
message GetTorrentRefResponse {
  Torrent item = 1;
}

message TorrentRef {
  string file_name = 1;
  string file_hash = 2;
  string referer = 3;
  string comment = 4;
  string created_by = 5;
  google.protobuf.Timestamp created_at = 6;
  string torrent_hash = 7;
  optional Torrent torrent = 8;
}

message Torrent {
  string file_name = 1;
  string hash = 2;
  string magnet = 3;
  int64 file_size = 4;
  int32 file_count = 5;
  string ext = 6;
  bool is_dir = 7;
}

message ListTorrentRefRequest{
  string search = 1;
  int32 page = 2;
}

message ListTorrentRefResponse{
  repeated TorrentRef items = 1;
  bool  hasNext = 2;
  bool  hasPrevious = 3;
}

