// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: indexer/torrenti/v1/index_service.proto

package torrentiv1

import (
	reflect "reflect"
	sync "sync"

	common "github.com/wenerme/torrenti/pkg/apis/indexer/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/httpbody"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatRequest) Reset() {
	*x = StatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_torrenti_v1_index_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatRequest) ProtoMessage() {}

func (x *StatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_torrenti_v1_index_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatRequest.ProtoReflect.Descriptor instead.
func (*StatRequest) Descriptor() ([]byte, []int) {
	return file_indexer_torrenti_v1_index_service_proto_rawDescGZIP(), []int{0}
}

type StatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stat *Stat `protobuf:"bytes,1,opt,name=stat,proto3" json:"stat,omitempty"`
}

func (x *StatResponse) Reset() {
	*x = StatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_torrenti_v1_index_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatResponse) ProtoMessage() {}

func (x *StatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_torrenti_v1_index_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatResponse.ProtoReflect.Descriptor instead.
func (*StatResponse) Descriptor() ([]byte, []int) {
	return file_indexer_torrenti_v1_index_service_proto_rawDescGZIP(), []int{1}
}

func (x *StatResponse) GetStat() *Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

type Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaCount            int64 `protobuf:"varint,1,opt,name=meta_count,json=metaCount,proto3" json:"meta_count,omitempty"`
	MetaSize             int64 `protobuf:"varint,5,opt,name=meta_size,json=metaSize,proto3" json:"meta_size,omitempty"`
	TorrentCount         int64 `protobuf:"varint,2,opt,name=torrent_count,json=torrentCount,proto3" json:"torrent_count,omitempty"`
	TorrentFileCount     int64 `protobuf:"varint,3,opt,name=torrent_file_count,json=torrentFileCount,proto3" json:"torrent_file_count,omitempty"`
	TorrentFileTotalSize int64 `protobuf:"varint,4,opt,name=torrent_file_total_size,json=torrentFileTotalSize,proto3" json:"torrent_file_total_size,omitempty"`
}

func (x *Stat) Reset() {
	*x = Stat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_torrenti_v1_index_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stat) ProtoMessage() {}

func (x *Stat) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_torrenti_v1_index_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stat.ProtoReflect.Descriptor instead.
func (*Stat) Descriptor() ([]byte, []int) {
	return file_indexer_torrenti_v1_index_service_proto_rawDescGZIP(), []int{2}
}

func (x *Stat) GetMetaCount() int64 {
	if x != nil {
		return x.MetaCount
	}
	return 0
}

func (x *Stat) GetMetaSize() int64 {
	if x != nil {
		return x.MetaSize
	}
	return 0
}

func (x *Stat) GetTorrentCount() int64 {
	if x != nil {
		return x.TorrentCount
	}
	return 0
}

func (x *Stat) GetTorrentFileCount() int64 {
	if x != nil {
		return x.TorrentFileCount
	}
	return 0
}

func (x *Stat) GetTorrentFileTotalSize() int64 {
	if x != nil {
		return x.TorrentFileTotalSize
	}
	return 0
}

type IndexTorrentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File *common.File `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Hash string       `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *IndexTorrentRequest) Reset() {
	*x = IndexTorrentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_torrenti_v1_index_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexTorrentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexTorrentRequest) ProtoMessage() {}

func (x *IndexTorrentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_torrenti_v1_index_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexTorrentRequest.ProtoReflect.Descriptor instead.
func (*IndexTorrentRequest) Descriptor() ([]byte, []int) {
	return file_indexer_torrenti_v1_index_service_proto_rawDescGZIP(), []int{3}
}

func (x *IndexTorrentRequest) GetFile() *common.File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *IndexTorrentRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type IndexTorrentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *IndexTorrentResponse) Reset() {
	*x = IndexTorrentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_indexer_torrenti_v1_index_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexTorrentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexTorrentResponse) ProtoMessage() {}

func (x *IndexTorrentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexer_torrenti_v1_index_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexTorrentResponse.ProtoReflect.Descriptor instead.
func (*IndexTorrentResponse) Descriptor() ([]byte, []int) {
	return file_indexer_torrenti_v1_index_service_proto_rawDescGZIP(), []int{4}
}

func (x *IndexTorrentResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

var File_indexer_torrenti_v1_index_service_proto protoreflect.FileDescriptor

var file_indexer_torrenti_v1_index_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2f, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x72, 0x2e, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x62, 0x6f, 0x64,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x0d, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x3d, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x74, 0x6f, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61,
	0x74, 0x22, 0xcc, 0x01, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x65, 0x74, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x74,
	0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74,
	0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74,
	0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x74, 0x6f, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x74, 0x6f, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x53, 0x0a, 0x13, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x2a, 0x0a, 0x14, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x6f,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x32, 0xfb, 0x01, 0x0a, 0x13, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7f, 0x0a, 0x0c, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x72, 0x2e, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x74, 0x6f,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x54,
	0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x3a, 0x01, 0x2a, 0x12, 0x63, 0x0a, 0x04, 0x53, 0x74,
	0x61, 0x74, 0x12, 0x20, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x74, 0x6f, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x74,
	0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12,
	0x0e, 0x2f, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x42,
	0xdf, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e,
	0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x6e,
	0x65, 0x72, 0x6d, 0x65, 0x2f, 0x74, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2f, 0x74,
	0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x6f, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x49, 0x54, 0x58, 0xaa, 0x02, 0x13, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x13, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x5c, 0x54, 0x6f, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x72, 0x5c, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x72, 0x3a, 0x3a, 0x54, 0x6f, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_indexer_torrenti_v1_index_service_proto_rawDescOnce sync.Once
	file_indexer_torrenti_v1_index_service_proto_rawDescData = file_indexer_torrenti_v1_index_service_proto_rawDesc
)

func file_indexer_torrenti_v1_index_service_proto_rawDescGZIP() []byte {
	file_indexer_torrenti_v1_index_service_proto_rawDescOnce.Do(func() {
		file_indexer_torrenti_v1_index_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_indexer_torrenti_v1_index_service_proto_rawDescData)
	})
	return file_indexer_torrenti_v1_index_service_proto_rawDescData
}

var (
	file_indexer_torrenti_v1_index_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
	file_indexer_torrenti_v1_index_service_proto_goTypes  = []interface{}{
		(*StatRequest)(nil),          // 0: indexer.torrenti.v1.StatRequest
		(*StatResponse)(nil),         // 1: indexer.torrenti.v1.StatResponse
		(*Stat)(nil),                 // 2: indexer.torrenti.v1.Stat
		(*IndexTorrentRequest)(nil),  // 3: indexer.torrenti.v1.IndexTorrentRequest
		(*IndexTorrentResponse)(nil), // 4: indexer.torrenti.v1.IndexTorrentResponse
		(*common.File)(nil),          // 5: indexer.common.File
	}
)
var file_indexer_torrenti_v1_index_service_proto_depIdxs = []int32{
	2, // 0: indexer.torrenti.v1.StatResponse.stat:type_name -> indexer.torrenti.v1.Stat
	5, // 1: indexer.torrenti.v1.IndexTorrentRequest.file:type_name -> indexer.common.File
	3, // 2: indexer.torrenti.v1.TorrentIndexService.IndexTorrent:input_type -> indexer.torrenti.v1.IndexTorrentRequest
	0, // 3: indexer.torrenti.v1.TorrentIndexService.Stat:input_type -> indexer.torrenti.v1.StatRequest
	4, // 4: indexer.torrenti.v1.TorrentIndexService.IndexTorrent:output_type -> indexer.torrenti.v1.IndexTorrentResponse
	1, // 5: indexer.torrenti.v1.TorrentIndexService.Stat:output_type -> indexer.torrenti.v1.StatResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_indexer_torrenti_v1_index_service_proto_init() }
func file_indexer_torrenti_v1_index_service_proto_init() {
	if File_indexer_torrenti_v1_index_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_indexer_torrenti_v1_index_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_torrenti_v1_index_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_torrenti_v1_index_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_torrenti_v1_index_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexTorrentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_indexer_torrenti_v1_index_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexTorrentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_indexer_torrenti_v1_index_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_indexer_torrenti_v1_index_service_proto_goTypes,
		DependencyIndexes: file_indexer_torrenti_v1_index_service_proto_depIdxs,
		MessageInfos:      file_indexer_torrenti_v1_index_service_proto_msgTypes,
	}.Build()
	File_indexer_torrenti_v1_index_service_proto = out.File
	file_indexer_torrenti_v1_index_service_proto_rawDesc = nil
	file_indexer_torrenti_v1_index_service_proto_goTypes = nil
	file_indexer_torrenti_v1_index_service_proto_depIdxs = nil
}
